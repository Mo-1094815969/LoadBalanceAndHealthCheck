server:
    port: 8080
spring:
    application:
        name: Health-Check-LoadBalancer

#健康检查
health:
    check:
        allow-partial-success: true # 是否将HTTP错误视为健康
        consider-http-errors-healthy: true # 是否允许部分成功（如206）
        interval: 30 # 30秒检测间隔
        max-failures: 2 # 失败阈值
        recovery-interval: 30 # 3分钟恢复检测间隔
        recovery-threshold: 1 # 增加恢复阈值
    #配置HTTP链接参数
    restTemplate:
        connectionRequestTimeout: 500
        connectionTimeout: 500 # 连接超时(毫秒)
        poolLimit: 800
        routerLimit: 100
        socketTimeout: 500

#负载均衡策略
loadbalancer:
    strategy: weighted #weighted权重轮询，round-robin轮询，random随机

banks:
    common:
        baseUrls:
            - http://171.21.87.171:80/uploan/
            - http://171.21.87.174:10313/uploan/
    configs:
        #weights权重,默认为1
        1003: { bankName: 百信银行, path: bxTest, weights: [1,1] }
        1004: { bankName: 众安贷, path: zaTest }
        1005: { bankName: 马上消费金融及/或其合作机构, path: msjrTest }
        1006: { bankName: 盛银, path: syTest }
        1007: { bankName: 江苏银行, path: jsyhTest1 }
        1008: { bankName: 中原消费金融, path: zyTest }
        1009: { bankName: 富民银行, path: fmwjTest }
        9999:
            bankName: 特殊银行
            urls: # 覆盖自动生成
                - url: http://wwww.baidu.com
                  weight: 5
                - url: http://wwww.bing.com
                  weight: 1

#日志配置
logging:
    level:
        com:
            example:
                healthcheck: DEBUG
        root: INFO
